
@{
    ViewData["Title"] = "Register";
}

<h1>Register</h1>

<div class="row">
    <div class="col-3"></div>
    <div class="col-6">
        <form id="form1">
       @* 改成用FormData方式，所以這行不用了 <form action="~/api/getdemo" method="post">
             method="get"的話(沒寫method也會預設是get)，輸入的資料會顯示在網址上，api/getdemo?name=aa&age=88          
            用post的話網址只會顯示api/getdemo*@
            <div class="mb-3">
                <label for="userName" class="form-label">User Name：</label>
                    <input type="text" class="form-control" id="userName" name="Name">    
                    @*屬性name要與apiController中的GetDemo( string name , int age=30)一樣或是要抓的class名稱相同*@
            </div>
            <div class="alert alert-danger justify-content-center" id="div2"></div>

            <div class="mb-3">
                <label for="userAge" class="form-label">User Age：</label>
                <input type="number" class="form-control" id="userAge" name="Age">
                @*age要與apiController中的GetDemo( string name , int age=30)一樣*@
            </div>
            <div class="mb-3">
                <label for="userEmail" class="form-label">User Email：</label>
                <input type="email" class="form-control" id="userEmail" name="Email">
                @*name要與apiController中的GetDemo( string name , int age=30)一樣*@
            </div>

            <div class="mb-3">
                <label for="formFile" class="form-label">Photo：</label>
                <input class="form-control" type="file" id="formFile" name="file">
            </div>

            <button type="submit" class="btn btn-outline-warning" id="button1">送出</button>       
        </form>

           <div class="alert alert-warning justify-content-center" id="div1"></div>

    </div>

    <div class="col-3"></div>


    <div>
        <a href="https://www.youtube.com/" id="a1">youtube</a>
    </div>

</div>

@section Styles{

}

@section Scripts{
    <script>
        const btn = document.querySelector('#button1');
        const theA = document.querySelector('#a1')
        const theDiv2=document.querySelector('#div2')
        const userName = document.querySelector('#userName')
       // const formDataName = `${model.Name}`; // 在 Razor View中獲取已存在的使用者名稱

        //改成用formData方式，所以就不用抓這兩個標籤，HTML的部分也不用設post那些
        //const txtName = document.querySelector('#userName')
        //const txtAge= document.querySelector('#userAge')
        const theDiv = document.querySelector('#div1')

        btn.addEventListener('click' , event=>{
            event.preventDefault();
            
            const xhr=new XMLHttpRequest();
            //xhr.open('Post', '/api/Register');   //改成用ApiController裡面的Register方法，直接新增至DB

            //改成↓
            //xhr.open('POST', '~/api/Register');
            xhr.open('POST', '@Url.Content("~/api/Register")')

            //改成用formData方式，這兩步就不用做
            //xhr.setRequestHeader('Content-Type' , 'application/x-www-form-urlencoded');
            //xhr.send(`name=${txtName.value}&age=${txtAge.value}`);

            //改用FormData
            //const formData = new FormData(document.querySelector('#form1'));
            //xhr.send(formData);


            xhr.addEventListener('load' , ()=>{
                const data = xhr.responseText;
                theDiv.innerHTML=data;            
            })

            //改用 fetch 傳送FormData到server端
            const formData = new FormData(document.querySelector('#form1'));
            fetch('@Url.Content("~/api/register")', {
                body: formData,
                method: 'POST'
            })
                .then(response => {
                    if (response.ok) {
                        alert("新增成功")
                        location.href = '@Url.Content("~/members/index")'    //新增完後跳轉到members的list畫面
                    } else {
                        alert("有錯誤!!")
                    }
                })

        })

        //防止預設行為，ex.在前往別的網頁中，有確認和取消的按鈕，點選確認會前往該網頁
            theA.addEventListener('click' , event=>{
                if ( ! window.confirm("真的要去嗎?") )
                {
                      event.preventDefault();
                }          
            
            })

        userName.addEventListener( 'blur' , ()=>{
            const xhr = new XMLHttpRequest();
            xhr.open('POST', '@Url.Content("/api/CheckAccount")' );
            xhr.setRequestHeader('Content-Type' , 'application/x-www-form-urlencoded');
            xhr.send(`Name=${userName.value}`);

            xhr.addEventListener('load', () => {
             const data = JSON.parse( xhr.responseText );
                theDiv2.innerHTML = data.message;
            })

        });

        


    </script>

}

