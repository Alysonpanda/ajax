
@{
    ViewData["Title"] = "Fetch";   
}

<h1>Fetch</h1>
<h2 id="myH"></h2>

<img id="img1" class="w-25" />
<ul id="ul1">
</ul>

@section Scripts{
    <script>
       // console.log(fetch('@Url.Content("/api/index")'));    //底層是Promise
        //fetch('@Url.Content("~/api/index")')
        //    .then(response => {
        //        console.log(response)
        //        console.log(response.ok)
        //    })


        fetch('@Url.Content("~/api/index")')
            .then(response => {
               console.log(response)
            //    console.log(response.ok)
            })    

            .then(response => response.text())   //Promise物件
            .then(data => {
                document.querySelector('#myH').innerHTML = data;
            })

            //把城市用li列表列出來
            //fetch('@Url.Content("~/api/Cities")')
            //    .then(response => response.json())
            //    .then(datas => {
            //     const lis = datas.map(city => `<li>${city}</li>`)
            //    document.querySelector('#ul1').innerHTML = lis.join("")
            //})

            //↑改成用fetch方法把城市列出來
               async function loadJSON(){
                 const response = await  fetch ('@Url.Content("~/api/Cities")')
                 const datas = await response.json()
                 const lis = datas.map(city => `<li>${city}</li>`)
                 document.querySelector('#ul1').innerHTML = lis.join("")              
               }

               loadJSON();           

            //叫出照片
            //.then(response => response.blob()) 的目的是從 Promise 鏈中的前一個 Promise 中獲取回應對象
            // 並將其轉換成 Blob 物件，以便進一步處理二進位數據（例如圖片、音頻等）。
            //fetch('@Url.Content("~/api/GetImageByte/1")')
            //    .then(response => response.blob())
            //    .then(datas => {
            //    const myImg = document.querySelector('#img1');
            //    myImg.src = URL.createObjectURL(datas);
            //})

            //改成用fetch叫出照片
             async function loadImage (){
             const response = await fetch('@Url.Content("~/api/GetImageByte/1")')
             const datas = await  response.blob()
             const myImg = document.querySelector('#img1');
             myImg.src = URL.createObjectURL(datas);
             
           }

        loadImage();

    </script>
}
